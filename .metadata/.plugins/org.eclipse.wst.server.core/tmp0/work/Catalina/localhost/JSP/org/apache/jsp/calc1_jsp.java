/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-07 12:01:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calc1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("body\r\n");
      out.write("{\r\n");
      out.write("  background: #c166a1;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function add(str) {\r\n");
      out.write("        //alert(str); 경고창 띄울 때\r\n");
      out.write("        //document.getElementById(\"display\").value += str; //문서전체(document)에서 ID를 이용해 element하나 가져온다.(getElementById)\r\n");
      out.write("        var display = document.getElementById('display');\r\n");
      out.write("\r\n");
      out.write("        if( str == \"+\" || str == \"-\" || str ==\"*\" || str == \"/\" ) { // 자바스크립트에서 문자열 비교도 == 를 쓴다. (equal 쓰지않음)\r\n");
      out.write("            document.getElementById(\"f\").value = display.value;\r\n");
      out.write("            display.value = \"0\";\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        else if ( str == \"=\" ) {\r\n");
      out.write("            document.getElementById(\"s\").value = display.value;\r\n");
      out.write("            display.value = \"0\";\r\n");
      out.write("\r\n");
      out.write("            document.getElementById(\"calcForm\").submit(); // documney가 calc3.jsp로 보낸다.\r\n");
      out.write("            /*\r\n");
      out.write("            var f = document.getElementById(\"f\").value;\r\n");
      out.write("            var s = document.getElementById(\"s\").value;\r\n");
      out.write("            var result = parseInt(f) + parseInt(s);\r\n");
      out.write("            //alert(result);\r\n");
      out.write("            display.value = result;\r\n");
      out.write("\r\n");
      out.write("            return;  // 반환한다.\r\n");
      out.write("            */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if ( display.value == 0 ) {\r\n");
      out.write("            display.value = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        display.value += str;\r\n");
      out.write("    } //자바스크립트에서는 return 타입이 없다.\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <input type=\"text\" id=\"display\" value=\"0\" style=\"width:300px; height:50px;\" />\r\n");
      out.write("\r\n");
      out.write("    <form id = \"calcForm\" method = \"post\" action=\"./calc2.jsp\">\r\n");
      out.write("        <input type=\"text\" id=\"f\" name=\"f\" /> <!-- calc3.jsp가 받을 수 있도록 f 와 s로 생성 -->\r\n");
      out.write("        <!-- <input type=\"hidden\" id=\"f\" name=\"f\"> 사용자에게 안보이게 만드는 것 -->\r\n");
      out.write("        <input type=\"text\" id=\"s\" name=\"s\" />\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <table border=\"1\" width=\"300\" height=\"300\" >\r\n");
      out.write("        <tr align = \"center\">\r\n");
      out.write("            <td  colspan= \"2\"><input type=\"button\" id=\"division\" value=\"/\" style=\"width:100%; height:70px;\" onclick=\"add('/')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"multiplication\" value=\"*\" style=\"width:100%; height:70px;\" onclick=\"add('*')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"subtraction\" value=\"-\" style=\"width:100%; height:70px;\" onclick=\"add('-')\" /></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr align = \"center\">\r\n");
      out.write("            <td><input type=\"button\" id=\"7\" value=\"7\" style=\"width:100%; height:70px;\" onclick=\"add('7')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"8\" value=\"8\" style=\"width:100%; height:70px;\" onclick=\"add('8')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"9\" value=\"9\" style=\"width:100%; height:70px;\" onclick=\"add('9')\" /></td>\r\n");
      out.write("            <td rowspan=\"2\"><input type=\"button\" id=\"addition\" value=\"+\" style=\"width:100%; height:140px;\" onclick=\"add('+')\"  /></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr align = \"center\">\r\n");
      out.write("            <td><input type=\"button\" id=\"4\" value=\"4\" style=\"width:100%; height:70px;\" onclick=\"add('4')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"5\" value=\"5\" style=\"width:100%; height:70px;\"onclick=\"add('5')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"6\" value=\"6\" style=\"width:100%; height:70px;\"onclick=\"add('6')\" /></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr align = \"center\">\r\n");
      out.write("            <td><input type=\"button\" id=\"1\" value=\"1\" style=\"width:100%; height:70px;\" onclick=\"add('1')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"2\" value=\"2\" style=\"width:100%; height:70px;\" onclick=\"add('2')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"3\" value=\"3\" style=\"width:100%; height:70px;\" onclick=\"add('3')\" /></td>\r\n");
      out.write("            <td rowspan=\"2\"><input type=\"button\" id=\"result\" value=\"=\" style=\"width:100%; height:140px;\" onclick=\"add('=')\" /></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr align = \"center\">\r\n");
      out.write("            <td colspan=\"2\"><input type=\"button\" id=\"0\" value=\"0\" style=\"width:100%; height:70px;\" onclick=\"add('0')\" /></td>\r\n");
      out.write("            <td><input type=\"button\" id=\"dot\" value=\".\" style=\"width:100%; height:70px;\" onclick=\"add('.')\" /></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
