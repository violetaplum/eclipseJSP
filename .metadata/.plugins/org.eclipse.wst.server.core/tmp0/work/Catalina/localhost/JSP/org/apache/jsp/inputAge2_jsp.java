/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-06-05 11:05:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class inputAge2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<script>\r\n");
      out.write("function check()\r\n");
      out.write("{\r\n");
      out.write("  var name = document.form.name.value;//document.getElementById(\"\")를 써도 된다~\r\n");
      out.write("  var year = document.form.year.value;\r\n");
      out.write("  var len = year.length\r\n");
      out.write(" // if(name.equals(\"\")||year.length!=4)\r\n");
      out.write(" // {\r\n");
      out.write(" //    alert(\"다시 입력해주세요\")\r\n");
      out.write(" //    window.location.href=\"./inputAge.jsp\"\r\n");
      out.write(" // }\r\n");
      out.write(" // else {\r\n");
      out.write(" //   window.location.href=\"./hello.html\"\r\n");
      out.write(" // }\r\n");
      out.write("\r\n");
      out.write(" if(irum=='')\r\n");
      out.write(" {\r\n");
      out.write("   alert(\"이름을 입력해주세요\")\r\n");
      out.write("   document.form.name.focus() //해당글상자에 마우스 커서를 두라\r\n");
      out.write("   return false //여기에 왔었나를 체크\r\n");
      out.write(" }\r\n");
      out.write(" if(len==0)\r\n");
      out.write(" {\r\n");
      out.write("   alert(\"숫자를 입력해 주세요\")\r\n");
      out.write("   document.form.year.focus()\r\n");
      out.write("   return false\r\n");
      out.write(" }\r\n");
      out.write(" else if(year<0)\r\n");
      out.write(" {\r\n");
      out.write("   alert(\"0이외의 숫자를 입력해 주세요\")\r\n");
      out.write("   document.form.year.focus()\r\n");
      out.write("   return false\r\n");
      out.write(" }\r\n");
      out.write(" else if(year<4 || year>4)\r\n");
      out.write(" {\r\n");
      out.write("   alert(\"년도는 4자리로 입력해주세요\")\r\n");
      out.write("   document.form.year.focus()\r\n");
      out.write("   return false\r\n");
      out.write(" }\r\n");
      out.write(" else {\r\n");
      out.write("   return true\r\n");
      out.write(" }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function success()\r\n");
      out.write("{\r\n");
      out.write("  if(check()==true)\r\n");
      out.write("  {\r\n");
      out.write("    document.form.submit() //자바 서버로 가는 함수\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("body\r\n");
      out.write("{\r\n");
      out.write("  background: #a9b616;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("  </head>\r\n");
      out.write("<body>\r\n");
      out.write("  <form action=\"./outputAge.jsp\" method=\"get\" name=\"form\">\r\n");
      out.write("  <h4>\r\n");
      out.write("  이름 : <input type=\"text\" name=\"name\" /><br />\r\n");
      out.write("  생년 : <input type=\"number\" name=\"year\"/><br />\r\n");
      out.write("<input type=\"submit\" value=\"submit\" onclick=\"javascript:success()\" />\r\n");
      out.write("\r\n");
      out.write("</h4>\r\n");
      out.write("</form>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
